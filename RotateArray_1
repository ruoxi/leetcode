//Rotate an array of n elements to the right by k steps.

//For example, with n = 7 and k = 3, the array [1,2,3,4,5,6,7] is rotated to [5,6,7,1,2,3,4].

//Note:
//Try to come up as many solutions as you can, there are at least 3 different ways to solve this problem.

class Solution {
public:
    //first reverse all nums, then reverse 0 to k-1, then reverse k to n-1
    void reverse(vector<int>&nums, int i, int j)
    {
        int mod = (j-i)%2;
        int end = (j-i)/2 ;
        if(mod != 0) end++;
        for (int m = 0; m <end; m++)
        {
            swap(nums[m+i], nums[j-m]);
        }
    }
    void rotate(vector<int>& nums, int k) {
        
        // 1, 2, 3, 4, 5, 6,
        //reverse all 
        int len = nums.size();
        k = k%len;

        if(k == 0) return;
        reverse(nums, 0, len-1);
        reverse(nums, 0, k-1);
        reverse(nums, k, len-1);
    }
};
