//Merge two sorted linked lists and return it as a new list. 
//The new list should be made by splicing together the nodes of the first two lists.

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
 
 // l1: 1-->3-->7-->12
 // l2: 2-->4-->5-->8-->13
 // merge: 1-->2-->3-->4-->5-->7-->8-->12-->13
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* l1, ListNode* l2) {
        ListNode dummy(0);
        ListNode* cur = &dummy;
        
        while(l1 != NULL && l2 != NULL )
        {
            if(l1->val < l2->val)
            {
                cur->next = l1;
                l1 = l1->next;
            }
            else
            {
                cur->next = l2;
                l2 = l2->next;
            }
            cur = cur->next;
        }
        
        if(l1 != NULL)
        {
            cur->next = l1;
        }
        if(l2 != NULL)
        {
            cur->next = l2;
        }
        
        return dummy.next;
    }
};
