//Given a sorted integer array without duplicates, return the summary of its ranges.

//For example, given [0,1,2,4,5,7], return ["0->2","4->5","7"].

//Credits:
//Special thanks to @jianchao.li.fighter for adding this problem and creating all test cases.

//Subscribe to see which companies asked this question

//Show Tags
//Show Similar Problems

class Solution {
public:
    string intToString(int a)
    {
        //Note: here needs to be carefully about overflow, cast int to long long
        long long ln = (long long)a;
        string res = "";
        if(a == 0) return "0";
        
        if(ln < 0) 
        {
            res+= "-";
            ln= -ln;
        }
        stack<char> s;
        while(ln > 0)
        {
            int mod = ln%10;
            s.push(mod+ '0');
            ln = ln/10;
        }
        
        while(!s.empty())
        {
            res += s.top();
            s.pop();
        }
        
        return res;
        
    }

    vector<string> summaryRanges(vector<int>& nums) {
        int n = nums.size();
        vector<string> res;
        if(nums.size() == 0) return res;
        int left = nums[0];
        
        //Note: add one more element at the end of the array to handle vector with only one element
        nums.push_back(nums[n-1]);
        n++;
        for(int i = 1; i < n; i++)
        {
            if(nums[i] != nums[i-1] + 1)
            {
                if(left == nums[i-1])
                {
                    string range = intToString(nums[i-1]);
                    res.push_back(range);
                }
                else
                {
                    string range = intToString(left) + "->" + intToString(nums[i-1]);
                    res.push_back(range);
                }
                left = nums[i];
                
            }
        }
        return res;
    }
};
